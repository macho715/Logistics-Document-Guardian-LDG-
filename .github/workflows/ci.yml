name: CI

on: [push, pull_request]

jobs:
  win-test:
    name: 🧪 Lint • Type • Test (Windows)
    runs-on: windows-latest
    # Removed strategy matrix as it's Windows only now

    steps:
    # 1) Checkout
    - uses: actions/checkout@v4

    # 2) List files (디버그용·선택) - Using cmd shell for dir
    - name: 📂 List files
      run: dir
      shell: cmd

    # 3) List data/pdf
    - name: 🔍 List data/pdf
      run: |
        echo "CI workspace: $(pwd)"
        echo "--- Listing data/pdf ---"
        ls -l data/pdf || echo "data/pdf directory not found or empty"
      shell: bash

    # 4) Setup Python
    - name: ⬇️ Setup Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: |
          pyproject.toml
          requirements.lock

    # 5) Tesseract 설치 (Windows PS1)
    - name: 🛠 Install Tesseract
      run: powershell -ExecutionPolicy Bypass -File scripts/install_tesseract_win.ps1

    # 6) Python deps 설치
    - name: 📦 Install deps
      run: |
        python -m pip install -U pip
        python -m pip install pip-tools
        pip-sync requirements.lock
        python -m pip install -e .        # editable install

    # 7) Ruff Format & Lint (Auto-fix in CI)
    - name: 🖋 Ruff format (apply Black-style)
      run: ruff format .

    - name: 🔧 Ruff lint auto-fix
      run: ruff check . --fix      # I001, E401 etc. auto-fix

    - name: 🔍 Ruff lint verify
      run: ruff check .           # Verify no issues remain after fix

    # 8) Mypy
    - name: 🔍 Mypy strict typing
      run: mypy .

    # 9) Pytest
    - name: 🧪 Pytest
      run: pytest -q

    # 10) 커버리지 리포트 (선택)
    # - name: Upload coverage
    #   uses: codecov/codecov-action@v4 